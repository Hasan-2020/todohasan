{"version":3,"sources":["Components/Navbar.js","Components/Card.js","Components/Column.js","Components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","showForm","this","props","className","value","onClick","type","name","PureComponent","Card","Cards","map","card","i","key","header","text","tag","date","Column","groups","console","log","group","groupId","groupName","cards","Main","ifClickEvent","ifClickGroup","eventHeader","handleChange","eventContent","eventDate","eventTags","handleSubmit","groupNameInput","addGroup","htmlFor","onChange","val","App","state","eventGroupName","tags","bind","e","index","oldCard","newCard","imgSrc","push","setState","preventDefault","newGroups","length","target","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.548f5c33.chunk.js","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Styles/style.css\";\r\n\r\nclass Navbar extends PureComponent {\r\n\trender() {\r\n\t\tconst { showForm } = this.props;\r\n\t\treturn (\r\n\t\t\t<header className=\"header\">\r\n\t\t\t\t<div className=\"header-logo\">NoToRacism!</div>\r\n\t\t\t\t<nav className=\"header-menu\">\r\n\t\t\t\t\t<button value=\"ifClickEvent\" onClick={showForm} type=\"button\" className=\"header-menu-button\" name=\"ifClickEvent\">\r\n\t\t\t\t\t\tAdd Card\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button onClick={showForm} value=\"ifClickGroup\" name=\"ifClickGroup\" type=\"button\" className=\"header-menu-button\">\r\n\t\t\t\t\t\tAdd Column\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</nav>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\nNavbar.propTypes = {\r\n\tshowForm: PropTypes.func.isRequired,\r\n};\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"../Styles/style.css\";\r\n\r\nfunction Card({ Cards = [\"any\"] }) {\r\n\treturn Cards.map((card, i) => {\r\n\t\tif (card !== \"any\") {\r\n\t\t\treturn (\r\n\t\t\t\t<div key={card.header + i} className=\"card\">\r\n\t\t\t\t\t<div className=\"card-left\">\r\n\t\t\t\t\t\t<div className=\"card-left-header\">{card.header}</div>\r\n\t\t\t\t\t\t<div className=\"card-left-text\">{card.text}</div>\r\n\t\t\t\t\t\t<div className=\"card-left-tag\">{card.tag}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-right\">\r\n\t\t\t\t\t\t<div className=\"card-right-image\">IMG</div>\r\n\t\t\t\t\t\t<div className=\"card-right-date\">{card.date}</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn <div key={card}>Etkinlik Yok</div>;\r\n\t});\r\n}\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"../Styles/style.css\";\r\n\r\nfunction Column({ groups }) {\r\n\tconsole.log(groups);\r\n\treturn groups.map((group) => {\r\n\t\treturn (\r\n\t\t\t<section className=\"column\" key={group.groupId}>\r\n\t\t\t\t<h2 className=\"column-header\">{group.groupName}</h2>\r\n\t\t\t\t<Card Cards={group.cards} />\r\n\t\t\t</section>\r\n\t\t);\r\n\t});\r\n}\r\nexport default Column;\r\n","import React from \"react\";\r\nimport Column from \"./Column\";\r\nimport \"../Styles/style.css\";\r\n\r\nfunction Main(props) {\r\n\tconst { ifClickEvent, ifClickGroup, groups, eventHeader, handleChange, eventContent, eventDate, eventTags, handleSubmit, groupNameInput, addGroup } = props;\r\n\treturn (\r\n\t\t<main className=\"main\">\r\n\t\t\t<Column groups={groups} />\r\n\t\t\t<div>\r\n\t\t\t\t<div className={\"main-form\" + (ifClickGroup ? \"-show\" : \" \")}>\r\n\t\t\t\t\t<label htmlFor=\"GroupName\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tColumn Name\r\n\t\t\t\t\t\t<input name=\"groupNameInput\" value={groupNameInput} type=\"text\" onChange={handleChange} className=\"main-form-show-input\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input onClick={addGroup} type=\"Submit\" value={\"Add\"} className=\"main-form-show-submit\" />\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className={\"main-form\" + (ifClickEvent ? \"-show\" : \" \")}>\r\n\t\t\t\t\t<label htmlFor=\"baslik\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tHeader\r\n\t\t\t\t\t\t<input name=\"eventHeader\" onChange={handleChange} type=\"text\" className=\"main-form-show-input\" value={eventHeader} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"icerik\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t<textarea name=\"eventContent\" type=\"text\" className=\"main-form-show-input\" onChange={handleChange} value={eventContent} />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"tarih\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tDate\r\n\t\t\t\t\t\t<input onChange={handleChange} value={eventDate} name=\"eventDate\" type=\"date\" />\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"etiket\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tLevels\r\n\t\t\t\t\t\t<select onChange={handleChange} name=\"eventTags\" value={eventTags}>\r\n\t\t\t\t\t\t\t<option value=\"2\">Level-01</option>\r\n\t\t\t\t\t\t\t<option value=\"3\">Level-02</option>\r\n\t\t\t\t\t\t\t<option value=\"4\">Level-03</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label htmlFor=\"group\" className=\"main-form-show-label\">\r\n\t\t\t\t\t\tGrup\r\n\t\t\t\t\t\t<select onChange={handleChange} name=\"eventGroupName\" className=\"main-form-show-select\">\r\n\t\t\t\t\t\t\t{groups.map((val) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option key={val.groupId} value={val.groupName}>\r\n\t\t\t\t\t\t\t\t\t\t{val.groupName}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input onClick={handleSubmit} className=\"main-form-show-submit\" type=\"submit\" value=\"Add\" />\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\nimport Navbar from \"./Components/Navbar\";\nimport Main from \"./Components/Main\";\nimport \"./App.css\";\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tifClickEvent: 0,\n\t\t\tifClickGroup: 0,\n\t\t\tgroupNameInput: \"\",\n\t\t\teventHeader: \"\",\n\t\t\teventContent: \"\",\n\t\t\teventTags: \"2\",\n\t\t\teventDate: \"\",\n\t\t\teventGroupName: \"Bootcamp\",\n\n\t\t\tgroups: [\n\t\t\t\t{\n\t\t\t\t\tgroupId: 1,\n\t\t\t\t\tgroupName: \"BootCamp\",\n\t\t\t\t\tcards: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theader: \"Home-Work\",\n\t\t\t\t\t\t\ttext: \"Time and tide wait for none\",\n\t\t\t\t\t\t\tdate: \"29-06-2020\",\n\t\t\t\t\t\t\ttags: 1,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupId: 2,\n\t\t\t\t\tgroupName: \"Post-Grad\",\n\t\t\t\t\tcards: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theader: \"E-conference\",\n\t\t\t\t\t\t\ttext: \"Attend at the right time\",\n\t\t\t\t\t\t\tdate: \"25-10-2010\",\n\t\t\t\t\t\t\ttag: 2,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tgroupId: 3,\n\t\t\t\t\tgroupName: \"Eid\",\n\t\t\t\t\tcards: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\theader: \"Bayram\",\n\t\t\t\t\t\t\ttext: \"Prepare for Eid-Ul-Azha\",\n\n\t\t\t\t\t\t\tdate: \"30-07-2020\",\n\t\t\t\t\t\t\ttag: 3,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t};\n\t\tthis.showForm = this.showForm.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.addGroup = this.addGroup.bind(this);\n\t}\n\n\thandleSubmit(e) {\n\t\tconst { groups } = this.state;\n\t\tconst { eventHeader, eventContent, eventDate, eventTags, eventGroupName } = this.state;\n\t\tlet index;\n\t\tgroups.map((val, i) => {\n\t\t\tif (val.groupName === eventGroupName) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t});\n\t\t//Immutable\n\t\tconst oldCard = groups[index].cards;\n\t\tconst newCard = {\n\t\t\theader: eventHeader,\n\t\t\ttext: eventContent,\n\t\t\timgSrc: \"\",\n\t\t\tdate: eventDate,\n\t\t\ttag: eventTags,\n\t\t};\n\t\t// Immutable\n\t\toldCard.push(newCard);\n\t\tconsole.log(oldCard);\n\t\tthis.setState({\n\t\t\tgroups,\n\t\t\teventHeader: \"\",\n\t\t\teventContent: \"\",\n\t\t\teventDate: \"\",\n\t\t\teventTags: 2,\n\t\t\teventGroupName: \"Okul\",\n\t\t\tifClickEvent: 0,\n\t\t});\n\t\te.preventDefault();\n\t}\n\n\taddGroup(e) {\n\t\t// const { name, value } = e.target;\n\t\tconst { groups, groupNameInput } = this.state;\n\t\tlet lastGroup = groups[groups.length - 1];\n\t\tconst newGroupId = lastGroup.groupId + 1;\n\t\tconst newGroups = {\n\t\t\tgroupId: newGroupId,\n\t\t\tgroupName: groupNameInput,\n\t\t\tcards: [],\n\t\t};\n\t\t// ToDo Immutable\n\t\tgroups.push(newGroups);\n\t\tthis.setState({ groups, groupNameInput: \"\", ifClickGroup: 0 });\n\t\te.preventDefault();\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t}\n\n\tshowForm(e) {\n\t\tconsole.log(e.target.name);\n\t\tconst { name } = e.target;\n\t\tconst { ifClickEvent, ifClickGroup } = this.state;\n\t\tlet val;\n\t\tif (name === \"ifClickEvent\") {\n\t\t\tconsole.log(\"value ifClickE\");\n\t\t\tval = ifClickEvent;\n\t\t} else if (name === \"ifClickGroup\") {\n\t\t\tconsole.log(\"else if\");\n\t\t\tval = ifClickGroup;\n\t\t}\n\t\tthis.setState({ [name]: !val });\n\t}\n\n\trender() {\n\t\t//console.log((I.Map(this.state.groups2.get(2)).set('groupIda','asd')).toJS());\n\t\tconst { groups, ifClickEvent, eventContent, eventDate, eventHeader, eventTags, ifClickGroup, groupNameInput } = this.state;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar showForm={this.showForm} />\n\t\t\t\t<Main\n\t\t\t\t\tgroupNameInput={groupNameInput}\n\t\t\t\t\tifClickEvent={ifClickEvent}\n\t\t\t\t\tifClickGroup={ifClickGroup}\n\t\t\t\t\tgroups={groups}\n\t\t\t\t\teventContent={eventContent}\n\t\t\t\t\teventDate={eventDate}\n\t\t\t\t\teventHeader={eventHeader}\n\t\t\t\t\teventTags={eventTags}\n\t\t\t\t\taddGroup={this.addGroup}\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t\thandleSubmit={this.handleSubmit}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}